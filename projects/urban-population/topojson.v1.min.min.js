!function(b,a){"object"==typeof exports&&"undefined"!=typeof module?a(exports):"function"==typeof define&&define.amd?define(["exports"],a):a(b.topojson=b.topojson||{})}(this,function(C){function w(l){if(!l){return H}var d,f,g=l.scale[0],h=l.scale[1],c=l.translate[0],a=l.translate[1];return function(i,e){e||(d=f=0),i[0]=(d+=i[0])*g+c,i[1]=(f+=i[1])*h+a}}function z(l){if(!l){return H}var d,f,g=l.scale[0],h=l.scale[1],c=l.translate[0],a=l.translate[1];return function(o,i){i||(d=f=0);var m=Math.round((o[0]-c)/g),e=Math.round((o[1]-a)/h);o[0]=m-d,o[1]=e-f,d=m,f=e}}function K(g,a){for(var c,d=g.length,f=d-a;f<--d;){c=g[f],g[f++]=g[d],g[d]=c}}function B(g,a){for(var c=0,d=g.length;c<d;){var f=c+d>>>1;g[f]<a?c=f+1:d=f}return c}function G(d,a){var c={type:"Feature",id:a.id,properties:a.properties||{},geometry:k(d,a)};return null==a.id&&delete c.id,c}function k(g,d){function e(s,f){f.length&&f.pop();for(var h,l=m[s<0?~s:s],c=0,a=l.length;c<a;++c){f.push(h=l[c].slice()),P(h,c)}s<0&&K(f,a)}function p(a){return a=a.slice(),P(a,0),a}function O(h){for(var a=[],c=0,f=h.length;c<f;++c){e(h[c],a)}return a.length<2&&a.push(a[0].slice()),a}function v(c){for(var a=O(c);a.length<4;){a.push(a[0].slice())}return a}function y(a){return a.map(v)}function E(c){var a=c.type;return"GeometryCollection"===a?{type:a,geometries:c.geometries.map(E)}:a in t?{type:a,coordinates:t[a](c)}:null}var P=w(g.transform),m=g.arcs,t={Point:function(a){return p(a.coordinates)},MultiPoint:function(a){return a.coordinates.map(p)},LineString:function(a){return O(a.arcs)},MultiLineString:function(a){return a.arcs.map(O)},Polygon:function(a){return y(a.arcs)},MultiPolygon:function(a){return a.arcs.map(y)}};return E(d)}function J(m,S,d){function O(c){var a=c<0?~c:c;(Q[a]||(Q[a]=[])).push({i:c,g:P})}function g(a){a.forEach(O)}function v(a){a.forEach(g)}function R(a){"GeometryCollection"===a.type?a.geometries.forEach(R):a.type in T&&(P=a,T[a.type](a.arcs))}var E=[];if(arguments.length>1){var P,Q=[],T={LineString:g,MultiLineString:v,Polygon:v,MultiPolygon:function(a){a.forEach(v)}};R(S),Q.forEach(arguments.length<3?function(a){E.push(a[0].i)}:function(a){d(a[0].g,a[a.length-1].g)&&E.push(a[0].i)})}else{for(var p=0,y=m.arcs.length;p<y;++p){E.push(p)}}return{type:"MultiLineString",arcs:j(m,E)}}function M(f){var a=f[0],c=f[1],d=f[2];return Math.abs((a[0]-d[0])*(c[1]-a[1])-(a[0]-c[0])*(d[1]-a[1]))}function N(h){for(var c,d=-1,f=h.length,g=h[f-1],a=0;++d<f;){c=g,g=h[d],a+=c[0]*g[1]-c[1]*g[0]}return a/2}function x(m,c){function d(e){e.forEach(function(f){f.forEach(function(i){(l[i=i<0?~i:i]||(l[i]=[])).push(e)})}),a.push(e)}function h(e){return Math.abs(N(k(m,{type:"Polygon",arcs:[e]}).coordinates[0]))}var l={},a=[],g=[];return c.forEach(function(e){"Polygon"===e.type?d(e.arcs):"MultiPolygon"===e.type&&e.arcs.forEach(d)}),a.forEach(function(i){if(!i._){var e=[],f=[i];for(i._=1,g.push(e);i=f.pop();){e.push(i),i.forEach(function(o){o.forEach(function(p){l[p<0?~p:p].forEach(function(r){r._||(r._=1,f.push(r))})})})}}}),a.forEach(function(e){delete e._}),{type:"MultiPolygon",arcs:g.map(function(p){var s,o=[];if(p.forEach(function(f){f.forEach(function(i){i.forEach(function(r){l[r<0?~r:r].length<2&&o.push(r)})})}),o=j(m,o),(s=o.length)>1){for(var n,v,y=1,e=h(o[0]);y<s;++y){(n=h(o[y]))>e&&(v=o[0],o[0]=o[y],o[y]=v,e=n)}}return o})}}function F(c,a){return c[1][2]-a[1][2]}var H=function(){},A=function(c,a){return"GeometryCollection"===a.type?{type:"FeatureCollection",features:a.geometries.map(function(d){return G(c,d)})}:G(c,a)},j=function(g,v){function a(c){var f,i=g.arcs[c<0?~c:c],n=i[0];return g.transform?(f=[0,0],i.forEach(function(e){f[0]+=e[0],f[1]+=e[1]})):f=i[i.length-1],c<0?[f,n]:[n,f]}function m(o,c){for(var f in o){var i=o[f];delete c[i.start],delete i.start,delete i.end,i.forEach(function(e){d[e<0?~e:e]=1}),l.push(i)}}var d={},h={},s={},l=[],p=-1;return v.forEach(function(f,n){var t,c=g.arcs[f<0?~f:f];c.length<3&&!c[1][0]&&!c[1][1]&&(t=v[++p],v[p]=f,v[n]=t)}),v.forEach(function(Q){var r,E,O=a(Q),y=O[0],P=O[1];if(r=s[y]){if(delete s[r.end],r.push(Q),r.end=P,E=h[P]){delete h[E.start];var i=E===r?r:r.concat(E);h[i.start=r.start]=s[i.end=E.end]=i}else{h[r.start]=s[r.end]=r}}else{if(r=h[P]){if(delete h[r.start],r.unshift(Q),r.start=y,E=s[y]){delete s[E.end];var u=E===r?r:E.concat(r);h[u.start=E.start]=s[u.end=r.end]=u}else{h[r.start]=s[r.end]=r}}else{r=[Q],h[r.start=y]=s[r.end=P]=r}}}),m(s,h),m(h,s),v.forEach(function(c){d[c<0?~c:c]||l.push([c])}),l},I=function(a){return k(a,J.apply(this,arguments))},L=function(a){return k(a,x.apply(this,arguments))},b=function(o){function W(c,a){c.forEach(function(f){f<0&&(f=~f);var e=E[f];e?e.push(a):E[f]=[a]})}function d(c,a){c.forEach(function(e){W(e,a)})}function R(c,a){"GeometryCollection"===c.type?c.geometries.forEach(function(e){R(e,a)}):c.type in Q&&Q[c.type](c.arcs,a)}var E={},V=o.map(function(){return[]}),Q={LineString:W,MultiLineString:d,Polygon:d,MultiPolygon:function(c,a){c.forEach(function(e){d(e,a)})}};o.forEach(R);for(var S in E){for(var T=E[S],X=T.length,y=0;y<X;++y){for(var O=y+1;O<X;++O){var m,U=T[y],P=T[O];(m=V[U])[S=B(m,P)]!==P&&m.splice(S,0,P),(m=V[P])[S=B(m,U)]!==U&&m.splice(S,0,U)}}}return V},D=function(){function g(l,e){for(;e>0;){var h=(e+1>>1)-1,i=d[h];if(F(l,i)>=0){break}d[i._=e]=i,d[l._=e=h]=l}}function a(p,l){for(;;){var m=l+1<<1,h=m-1,e=l,o=d[e];if(h<f&&F(d[h],o)<0&&(o=d[e=h]),m<f&&F(d[m],o)<0&&(o=d[e=m]),e===l){break}d[o._=l]=o,d[p._=l=e]=p}}var c={},d=[],f=0;return c.push=function(e){return g(d[e._=f]=e,f++),f},c.pop=function(){if(!(f<=0)){var h,e=d[0];return --f>0&&(h=d[f],a(d[h._=0]=h,0)),e}},c.remove=function(l){var h,e=l._;if(d[e]===l){return e!==--f&&(h=d[f],(F(h,l)<0?g:a)(d[h._=e]=h,e)),e}},c},q=function(l,g){function h(e){d.remove(e),e[1][2]=g(e),d.push(e)}var c=w(l.transform),a=z(l.transform),d=D();return null==g&&(g=M),l.arcs.forEach(function(i){var y,e,u,v,E=[],m=0;for(e=0,u=i.length;e<u;++e){v=i[e],c(i[e]=[v[0],v[1],1/0],e)}for(e=1,u=i.length-1;e<u;++e){y=i.slice(e-1,e+2),y[1][2]=g(y),E.push(y),d.push(y)}for(e=0,u=E.length;e<u;++e){y=E[e],y.previous=E[e-1],y.next=E[e+1]}for(;y=d.pop();){var o=y.previous,f=y.next;y[1][2]<m?y[1][2]=m:m=y[1][2],o&&(o.next=f,o[2]=y[2],h(o)),f&&(f.previous=o,f[0]=y[0],h(f))}i.forEach(a)}),l};C.mesh=I,C.meshArcs=J,C.merge=L,C.mergeArcs=x,C.feature=A,C.neighbors=b,C.presimplify=q,Object.defineProperty(C,"__esModule",{value:!0})});